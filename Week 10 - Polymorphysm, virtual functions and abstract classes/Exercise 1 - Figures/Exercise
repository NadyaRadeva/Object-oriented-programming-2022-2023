Позволено е ползването на std::string и std::vector Имате няколко вида форми, които трябва да реализирате като класове:
Triangle - има дължини на трите му страни
Circle - има дължина на радиуса
Square - има дължина на страната

Тези класове трябва да наследят абстрактен клас Shape, който има
член-данна label от тип std::string - идентификатор на формата (например "Triangle A")
член-функция getLabel()
чисто виртуални член-функции print(), copy() и getPerimeter(). print() да отпечатва в конзолата пиктограма на обекта. copy() да връща указател(Shape*) към новосъздадено копие от наследен тип на обекта-this в динамичната памет.
Приемете че PI = 3.14

Освен това трябва да реализирате клас ShapeContainer, който съхранява форми от всякакви видове в реда, в който са били добавени от потребителя. Този клас има функции за:
добавяне на обект
извеждане на информацията за периметрите на всички обекти във вида "идентификатор - периметър". Пример:
Triangle A - 12
отпечатване на обектите в контейнера чрез пиктограми в реда, в който са били добавени. Не е нужно пиктограмите да отговарят на точните форми и размери на обектите.

Пример:
 /\
/__\
 ___
|   |
|___|
 /\
/__\
   _
 /   \
|     |
 \ _ /
